@page
@model RegisterModel
@{
    ViewData["Title"] = "New Account";
}
@section Header {
    <!-- Header-->
    <header class="bg-dark py-5 " style="    background-image: url(/assets/d3cbafu-6fdedbb3-cc88-41d7-b403-3c94163b1480.jpg) !important;">
        <div class="container px-1 px-lg-1 my-1">
            <div class="text-center text-white">
                <h1 class="display-10 fw-bolder">Register New Account</h1>
            </div>
        </div>
    </header>
}
@{
    /*
    * Steps to Extend Identity (a.k.a Custom User details)
    *
    * -prerequistie: we must have a table in the database available to store the extra info.
    *  IN gadgaetstore, we have a dedicaded UserDetails table.
    *
    * 1) (code-behind file) add props to the InputModel to map our UserDetails props.
    * 2) (View/Razor/ Page) add <input>s for the new props
    * 3) (code behind file) Create a GadgetStoreContext object and a UserDetails object in the OnPostAsync()
    *      - Add using statement (using GadgetStore.DATA.EF.Models)
    *      - Instantiate a new UserDetail object and GadgetStoreContext object
    *      - Assin values to the UserDetail object
    *      - Use the _context to save the UserDetail object to the database.
    */
}
<hr />

<div class="row">
    <div class="col-md-4 offset-4">
        <form id="registerForm" asp-route-returnUrl="@Model.ReturnUrl" method="post">
            
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>

            @* Custom User Details Inputs below*@
            <label asp-for="Input.Email"></label>
            <div class="form-floating">
                <input asp-for="Input.Email" class="form-control" autocomplete="username" aria-required="true" />
                <span asp-validation-for="Input.Email" class="text-danger"></span>
            </div>
            <label asp-for="Input.FirstName"></label>
            <div class="form-floating">
                <input asp-for="Input.FirstName" class="form-control" />
                <span asp-validation-for="Input.FirstName" class="text-danger"></span>
            </div>
            <label asp-for="Input.LastName"></label>
            <div class="form-floating">
                <input asp-for="Input.LastName" class="form-control" />
                <span asp-validation-for="Input.LastName" class="text-danger"></span>
            </div>
                <label asp-for="Input.Address"></label>
            <div class="form-floating">
                <input asp-for="Input.Address" class="form-control" />
                <span asp-validation-for="Input.Address" class="text-danger"></span>
            </div>
            <label asp-for="Input.City"></label>
            <div class="form-floating">
                <input asp-for="Input.City" class="form-control" />
                <span asp-validation-for="Input.City" class="text-danger"></span>
            </div>
            <label asp-for="Input.State"></label>
            <div class="form-floating">
                <input asp-for="Input.State" class="form-control" />
                <span asp-validation-for="Input.State" class="text-danger"></span>
            </div>
            <label asp-for="Input.Zip"></label>
            <div class="form-floating">
                <input asp-for="Input.Zip" class="form-control" />
                <span asp-validation-for="Input.Zip" class="text-danger"></span>
            </div>
            <label asp-for="Input.Phone"></label>
            <div class="form-floating">
                <input asp-for="Input.Phone" class="form-control" />
                <span asp-validation-for="Input.Phone" class="text-danger"></span>
            </div>

            @* Moved inputs for password, and confirmedpassword here*@
            <label asp-for="Input.Password"></label>
            <div class="form-floating">
                <input asp-for="Input.Password" class="form-control" autocomplete="new-password" aria-required="true" />
                <span asp-validation-for="Input.Password" class="text-danger"></span>
            </div>
            <label asp-for="Input.ConfirmPassword"></label>
            <div class="form-floating">
                <input asp-for="Input.ConfirmPassword" class="form-control" autocomplete="new-password" aria-required="true" />
                <span asp-validation-for="Input.ConfirmPassword" class="text-danger"></span>
            </div>
            <hr />

            <button id="registerSubmit" type="submit" class="w-100 btn btn-lg btn-primary">Register</button>
        </form>
    </div>
    @*    <div class="col-md-6 col-md-offset-2">
    <section>
    <h3>Use another service to register.</h3>
    <hr />
    @{
    if ((Model.ExternalLogins?.Count ?? 0) == 0)
    {
    <div>
    <p>
    There are no external authentication services configured. See this <a href="https://go.microsoft.com/fwlink/?LinkID=532715">article
    about setting up this ASP.NET application to support logging in via external services</a>.
    </p>
    </div>
    }
    else
    {
    <form id="external-account" asp-page="./ExternalLogin" asp-route-returnUrl="@Model.ReturnUrl" method="post" class="form-horizontal">
    <div>
    <p>
    @foreach (var provider in Model.ExternalLogins)
    {
    <button type="submit" class="btn btn-primary" name="provider" value="@provider.Name" title="Log in using your @provider.DisplayName account">@provider.DisplayName</button>
    }
    </p>
    </div>
    </form>
    }
    }
    </section>
    </div>
    *@
</div>
<br />
@section Scripts {
    <partial name="_ValidationScriptsPartial" />
}
